/**
 * Verificar que las URLs de las obleas funcionan
 * 
 * Hace peticiones HTTP a las URLs para verificar que las im√°genes existen
 */

const { PrismaClient } = require('@prisma/client')
const https = require('https')
const http = require('http')

const prisma = new PrismaClient()

// Verificar una URL
function verificarURL(url) {
  return new Promise((resolve) => {
    const protocolo = url.startsWith('https') ? https : http
    
    const req = protocolo.get(url, (res) => {
      if (res.statusCode === 200) {
        resolve({ existe: true, status: res.statusCode })
      } else {
        resolve({ existe: false, status: res.statusCode })
      }
    })
    
    req.on('error', (error) => {
      resolve({ existe: false, error: error.message })
    })
    
    req.setTimeout(5000, () => {
      req.destroy()
      resolve({ existe: false, error: 'Timeout' })
    })
  })
}

async function verificarObleas() {
  const obleaId = process.argv[2]
  
  console.log('üîç VERIFICANDO URLs DE OBLEAS\n')
  console.log('='.repeat(80))
  
  try {
    let obleas
    
    if (obleaId) {
      console.log(`\nüìã Verificando oblea ID: ${obleaId}\n`)
      obleas = [await prisma.obleas.findUnique({ where: { id: parseInt(obleaId) } })]
      if (!obleas[0]) {
        console.error('‚ùå Oblea no encontrada')
        return
      }
    } else {
      console.log('\nüìã Verificando primeras 5 obleas...\n')
      obleas = await prisma.obleas.findMany({
        take: 5,
        orderBy: { id: 'asc' }
      })
    }
    
    let existenFirmaReceptor = 0
    let existenFirmaInspector = 0
    let existenFoto = 0
    let errorFirmaReceptor = 0
    let errorFirmaInspector = 0
    let errorFoto = 0
    
    for (const oblea of obleas) {
      console.log('\n' + '‚îÄ'.repeat(80))
      console.log(`üÜî Oblea ID: ${oblea.id} - ${oblea.nro_licencia}`)
      
      // Verificar firma receptor
      if (oblea.path_firma_receptor) {
        console.log('\n‚úçÔ∏è  FIRMA RECEPTOR:')
        console.log(`   URL: ${oblea.path_firma_receptor}`)
        
        const resultado = await verificarURL(oblea.path_firma_receptor)
        if (resultado.existe) {
          console.log(`   ‚úÖ Existe (Status: ${resultado.status})`)
          existenFirmaReceptor++
        } else {
          console.log(`   ‚ùå No existe (${resultado.error || 'Status: ' + resultado.status})`)
          errorFirmaReceptor++
        }
      } else {
        console.log('\n‚úçÔ∏è  FIRMA RECEPTOR: ‚ö™ No tiene')
      }
      
      // Verificar firma inspector
      if (oblea.path_firma_inspector) {
        console.log('\n‚úçÔ∏è  FIRMA INSPECTOR:')
        console.log(`   URL: ${oblea.path_firma_inspector}`)
        
        const resultado = await verificarURL(oblea.path_firma_inspector)
        if (resultado.existe) {
          console.log(`   ‚úÖ Existe (Status: ${resultado.status})`)
          existenFirmaInspector++
        } else {
          console.log(`   ‚ùå No existe (${resultado.error || 'Status: ' + resultado.status})`)
          errorFirmaInspector++
        }
      } else {
        console.log('\n‚úçÔ∏è  FIRMA INSPECTOR: ‚ö™ No tiene')
      }
      
      // Verificar foto
      if (oblea.path_foto) {
        console.log('\nüì∑ FOTO:')
        console.log(`   URL: ${oblea.path_foto}`)
        
        const resultado = await verificarURL(oblea.path_foto)
        if (resultado.existe) {
          console.log(`   ‚úÖ Existe (Status: ${resultado.status})`)
          existenFoto++
        } else {
          console.log(`   ‚ùå No existe (${resultado.error || 'Status: ' + resultado.status})`)
          errorFoto++
        }
      } else {
        console.log('\nüì∑ FOTO: ‚ö™ No tiene')
      }
    }
    
    // Resumen
    if (obleas.length > 1) {
      console.log('\n' + '='.repeat(80))
      console.log('üìä RESUMEN')
      console.log('='.repeat(80))
      console.log(`\n‚úÖ Firmas receptor accesibles: ${existenFirmaReceptor}`)
      console.log(`‚ùå Firmas receptor con error: ${errorFirmaReceptor}`)
      console.log(`\n‚úÖ Firmas inspector accesibles: ${existenFirmaInspector}`)
      console.log(`‚ùå Firmas inspector con error: ${errorFirmaInspector}`)
      console.log(`\n‚úÖ Fotos accesibles: ${existenFoto}`)
      console.log(`‚ùå Fotos con error: ${errorFoto}`)
    }
    
  } catch (error) {
    console.error('\n‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

verificarObleas()
